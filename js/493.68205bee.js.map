{"version":3,"file":"js/493.68205bee.js","mappings":"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","sources":["webpack://projekt/./src/components/TreeForm.vue","webpack://projekt/./src/components/TreeForm.vue?a936"],"sourcesContent":["<template>\r\n  <Tutorial />\r\n  <form class=\"form-container\" @submit.prevent=\"submitForm\">\r\n    <h2 class=\"formbold-form-title\">Baumregistrierung</h2>\r\n\r\n    <div class=\"formbold-input-flex\">\r\n      <label class=\"formbold-form-label with-tooltip\">\r\n        Baumart\r\n        <img src=\"@/assets/icon/info-icon.svg\" class=\"info-icon\" alt=\"Info\" @click.stop=\"toggleTooltip('tree_type')\" />\r\n        <span v-if=\"activeTooltip === 'tree_type'\" class=\"tooltip-text\">\r\n          Wähle die Baumart aus der Liste aus.\r\n        </span>\r\n      </label>\r\n      <select v-model=\"formData.tree_type_id\" class=\"formbold-form-input\" required>\r\n        <option value=\"\" disabled>Bitte Baumart wählen</option>\r\n        <option v-for=\"tree in dropDownList\" :key=\"tree.id\" :value=\"tree.id\">\r\n          {{ tree.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <label class=\"formbold-form-label with-tooltip\">\r\n      Höhe des Baumes (m)\r\n      <img src=\"@/assets/icon/info-icon.svg\" class=\"info-icon\" alt=\"Info\" @click.stop=\"toggleTooltip('height')\" />\r\n      <span v-if=\"activeTooltip === 'height'\" class=\"tooltip-text\">\r\n        Gib die Höhe des Baums in Metern an.\r\n      </span>\r\n    </label>\r\n    <input v-model=\"formData.measurement.height\" placeholder=\"Höhe\" min=\"1\" type=\"number\" class=\"formbold-form-input\"\r\n      required />\r\n\r\n    <label class=\"formbold-form-label with-tooltip\">\r\n      Neigung (Grad)\r\n      <img src=\"@/assets/icon/info-icon.svg\" class=\"info-icon\" alt=\"Info\" @click.stop=\"toggleTooltip('inclination')\" />\r\n      <span v-if=\"activeTooltip === 'inclination'\" class=\"tooltip-text\">\r\n        Trage die Neigung des Baums <br> in Grad ein (0-89).\r\n      </span>\r\n    </label>\r\n    <input v-model=\"formData.measurement.inclination\" placeholder=\"Neigung\" min=\"0\" max=\"89\" type=\"number\"\r\n      class=\"formbold-form-input\" required />\r\n\r\n    <label class=\"formbold-form-label with-tooltip\">\r\n      Durchmesser des Stamms (cm)\r\n      <img src=\"@/assets/icon/info-icon.svg\" class=\"info-icon\" alt=\"Info\" @click.stop=\"toggleTooltip('trunk')\" />\r\n      <span v-if=\"activeTooltip === 'trunk'\" class=\"tooltip-text\">\r\n        Miss den Stammdurchmesser in Zentimetern auf Brusthöhe.\r\n      </span>\r\n    </label>\r\n    <input v-model=\"formData.measurement.trunk_diameter\" placeholder=\"Durchmesser des Stamms\" min=\"1\" type=\"number\"\r\n      class=\"formbold-form-input\" required />\r\n\r\n    <label class=\"formbold-form-label with-tooltip\">\r\n      Notiz\r\n      <img src=\"@/assets/icon/info-icon.svg\" class=\"info-icon\" alt=\"Info\" @click.stop=\"toggleTooltip('notes')\" />\r\n      <span v-if=\"activeTooltip === 'notes'\" class=\"tooltip-text\">\r\n        Hier kannst du eine optionale Notiz zum Baum hinterlassen.\r\n      </span>\r\n    </label>\r\n    <input class=\"formbold-form-input\" v-model=\"formData.measurement.notes\" placeholder=\"Notiz\" />\r\n\r\n    <input type=\"file\" @change=\"handleFileUpload($event, 0)\" />\r\n    <input type=\"file\" @change=\"handleFileUpload($event, 1)\" />\r\n\r\n    <div v-if=\"location\">\r\n      <iframe :src=\"iframeUrl\" style=\"border: 1px solid black\"></iframe>\r\n      <br />\r\n    </div>\r\n    <button type=\"submit\" :disabled=\"isDisabled\">Absenden</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { Geolocation } from '@capacitor/geolocation';\r\nimport Tutorial from '@/components/FirstTutorial.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Tutorial,\r\n  },\r\n  data() {\r\n    return {\r\n      dropDownList: [],\r\n      location: null,\r\n      activeTooltip: null,\r\n      formData: {\r\n        tree_type_id: 0,\r\n        latitude: 0,\r\n        longitude: 0,\r\n        health_status_id: 1,\r\n        measurement: {\r\n          height: 0,\r\n          inclination: 0,\r\n          trunk_diameter: 0,\r\n          notes: null,\r\n        },\r\n        files: [],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    iframeUrl() {\r\n      const { latitude, longitude } = this.location;\r\n      return `https://www.openstreetmap.org/export/embed.html?bbox=${longitude}%2C${latitude}%2C${longitude}%2C${latitude}&layer=mapnik&marker=${latitude}%2C${longitude}`;\r\n    },\r\n    isDisabled: function () {\r\n      return (this.formData.latitude === 0 && this.formData.latitude === 0);\r\n    }\r\n  },\r\n  methods: {\r\n    toggleTooltip(field) {\r\n      this.activeTooltip = this.activeTooltip === field ? null : field;\r\n    },\r\n    handleClickOutside(event) {\r\n      const tooltipElements = document.querySelectorAll('.with-tooltip');\r\n      const clickedInside = Array.from(tooltipElements).some(el => el.contains(event.target));\r\n      if (!clickedInside) {\r\n        this.activeTooltip = null;\r\n      }\r\n    },\r\n    async submitForm() {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        localStorage.setItem(\"pendingTreeData\", JSON.stringify(this.formData));\r\n        alert(\"Sie müssen sich anmelden, um einen Baum zu registrieren.\");\r\n        this.$router.push(\"/login\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        console.log(JSON.stringify(this.formData));\r\n        const response = await fetch(\"https://treescope.cs.hs-fulda.de/api/v1/trees/create-tree\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(this.formData),\r\n        });\r\n\r\n        const result = await response.json();\r\n        console.log(\"Antwort vom Server:\", result);\r\n        if (response.ok) {\r\n          alert(\"Baum erfolgreich registriert!\");\r\n          this.resetFormData();\r\n          localStorage.removeItem(\"pendingTreeData\");\r\n        } else {\r\n          alert(\"Fehler beim Registrieren des Baums: \" + result.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Fehler beim Senden des Formulars:\", error);\r\n        alert(\"Ein Fehler ist aufgetreten. Bitte versuchen Sie es später erneut.\");\r\n      }\r\n    },\r\n    resetFormData() {\r\n      this.formData = {\r\n        tree_type_id: 0,\r\n        latitude: this.formData.latitude,\r\n        longitude: this.formData.longitude,\r\n        health_status_id: 1,\r\n        measurement: {\r\n          height: 0,\r\n          inclination: 0,\r\n          trunk_diameter: 0,\r\n          notes: null,\r\n        },\r\n        files: [],\r\n      };\r\n      const fileInputs = document.querySelectorAll('input[type=\"file\"]');\r\n      fileInputs.forEach((input) => (input.value = \"\"));\r\n    },\r\n    async fetchTreeTypes() {\r\n      try {\r\n        const response = await fetch(\"https://treescope.cs.hs-fulda.de/api/v1/trees/types\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          console.log(\"Fehler beim Abrufen der Baumarten\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"Baumarten vom Server:\", data);\r\n        this.dropDownList = data.tree_types || [];\r\n      } catch (error) {\r\n        console.error(\"Fehler beim Abrufen der Baumarten:\", error);\r\n        this.dropDownList = [];\r\n      }\r\n    },\r\n    async getLocation() {\r\n      try {\r\n        const position = await Geolocation.getCurrentPosition({ enableHighAccuracy: true });\r\n        if (position.coords) {\r\n          this.location = position.coords;\r\n          this.formData.latitude = Number(this.location.latitude.toFixed(6));\r\n          this.formData.longitude = Number(this.location.longitude.toFixed(6));\r\n        }\r\n      } catch (error) {\r\n        console.log(\"GeoLocation konnte nicht abgerufen werden:\", error);\r\n        alert(\"Standort konnte nicht bestimmt werden. Bitte versuche es erneut oder aktiviere den Standortdienst.\")\r\n      }\r\n    },\r\n    addFileInput() {\r\n      this.formData.files.push({ filename: \"\", photo_data: \"\", description: \"\" });\r\n    },\r\n    handleFileUpload(event, index) {\r\n      this.addFileInput();\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n\r\n      reader.onload = () => {\r\n        this.formData.files[index].filename = file.name;\r\n        this.formData.files[index].photo_data = reader.result;\r\n      };\r\n\r\n      reader.onerror = (error) => {\r\n        console.error(\"Fehler beim Lesen der Datei:\", error);\r\n      };\r\n    },\r\n  },\r\n  created() {\r\n    this.getLocation();\r\n    this.fetchTreeTypes();\r\n    const pendingData = localStorage.getItem(\"pendingTreeData\");\r\n    const token = localStorage.getItem(\"token\");\r\n    if (pendingData && token) {\r\n      this.formData = JSON.parse(pendingData);\r\n      localStorage.removeItem(\"pendingTreeData\");\r\n      this.submitForm();\r\n    }\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  unmounted() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import './style.css';\r\n\r\ninput[type=number]::-webkit-inner-spin-button,\r\ninput[type=number]::-webkit-outer-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n\r\ninput[type=number] {\r\n  -moz-appearance: textfield;\r\n}\r\n\r\n.form-container {\r\n  max-width: 600px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  background: #ffffff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.formbold-form-title {\r\n  font-size: 1.8rem;\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n  color: #343a40;\r\n}\r\n\r\n.formbold-form-label {\r\n  font-weight: 600;\r\n  margin-top: 1rem;\r\n  display: block;\r\n  color: #495057;\r\n  position: relative;\r\n}\r\n\r\n.formbold-form-input {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 0.5rem;\r\n  font-size: 1rem;\r\n  box-sizing: border-box;\r\n  transition: border 0.3s ease;\r\n}\r\n\r\n.formbold-form-input:focus {\r\n  border-color: #0d6efd;\r\n  outline: none;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  width: 100%;\r\n  background-color: #28a745;\r\n  color: white;\r\n  padding: 0.75rem;\r\n  border: none;\r\n  border-radius: 0.5rem;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  margin-top: 1.5rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton[type=\"submit\"]:disabled {\r\n  background-color: #218838;\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n  background-color: #218838;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  margin: 0.5rem 0;\r\n}\r\n\r\niframe {\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 1rem;\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.info-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-left: 0.5rem;\r\n  cursor: pointer;\r\n  vertical-align: middle;\r\n  filter: brightness(0) saturate(100%) invert(29%) sepia(99%) saturate(647%) hue-rotate(72deg) brightness(95%) contrast(94%);\r\n}\r\n\r\n.tooltip-text {\r\n  display: block;\r\n  background-color: #333;\r\n  color: #fff;\r\n  padding: 0.5rem;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  z-index: 10;\r\n  top: 100%;\r\n  left: 0;\r\n  width: max-content;\r\n  max-width: 300px;\r\n  margin-top: 0.3rem;\r\n  font-size: 0.875rem;\r\n  line-height: 1.2;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .form-container {\r\n    margin: 1rem;\r\n    padding: 1rem;\r\n  }\r\n\r\n  .formbold-form-title {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  button[type=\"submit\"] {\r\n    font-size: 1rem;\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./TreeForm.vue?vue&type=template&id=fc75b4c2&scoped=true\"\nimport script from \"./TreeForm.vue?vue&type=script&lang=js\"\nexport * from \"./TreeForm.vue?vue&type=script&lang=js\"\n\nimport \"./TreeForm.vue?vue&type=style&index=0&id=fc75b4c2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fc75b4c2\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_Fragment","_createVNode","_component_Tutorial","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitForm","_hoisted_1","_hoisted_2","_createTextVNode","src","_imports_0","alt","onClick","$event","toggleTooltip","$data","activeTooltip","_hoisted_3","_createCommentVNode","formData","tree_type_id","required","value","disabled","_renderList","dropDownList","tree","id","name","_hoisted_4","_hoisted_5","_hoisted_6","measurement","height","placeholder","min","type","_hoisted_7","_hoisted_8","inclination","max","_hoisted_9","_hoisted_10","trunk_diameter","_hoisted_11","_hoisted_12","notes","onChange","handleFileUpload","location","_hoisted_13","iframeUrl","style","_hoisted_14","isDisabled","_hoisted_15","components","Tutorial","data","latitude","longitude","health_status_id","files","computed","this","methods","field","handleClickOutside","event","tooltipElements","document","querySelectorAll","clickedInside","Array","from","some","el","contains","target","token","localStorage","getItem","setItem","JSON","stringify","alert","$router","push","console","log","response","fetch","method","headers","body","result","json","ok","resetFormData","removeItem","message","error","fileInputs","forEach","input","fetchTreeTypes","tree_types","getLocation","position","Geolocation","getCurrentPosition","enableHighAccuracy","coords","Number","toFixed","addFileInput","filename","photo_data","description","index","file","reader","FileReader","readAsDataURL","onload","onerror","created","pendingData","parse","addEventListener","unmounted","removeEventListener","__exports__","render"],"sourceRoot":""}